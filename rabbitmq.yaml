apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
  name: rabbitmq-1-rabbitmq
  namespace: default
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: rabbitmq-server
      app.kubernetes.io/name: rabbitmq-1
  serviceName: rabbitmq-1-rabbitmq-discovery
  template:
    metadata:
      labels:
        app.kubernetes.io/component: rabbitmq-server
        app.kubernetes.io/name: rabbitmq-1
    spec:
      containers:
      - env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: RABBITMQ_USE_LONGNAME
          value: "true"
        - name: RABBITMQ_NODENAME
          value: rabbit@$(MY_POD_NAME).rabbitmq-1-rabbitmq-discovery.default.svc.cluster.local
        - name: K8S_SERVICE_NAME
          value: rabbitmq-1-rabbitmq-discovery
        - name: K8S_HOSTNAME_SUFFIX
          value: .rabbitmq-1-rabbitmq-discovery.default.svc.cluster.local
        - name: RABBITMQ_ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              key: rabbitmq-erlang-cookie
              name: rabbitmq-1-rabbitmq-secret
        - name: RABBITMQ_DEFAULT_USER
          value: rabbit
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              key: rabbitmq-pass
              name: rabbitmq-1-rabbitmq-secret
        image: gcr.io/cloud-marketplace/google/rabbitmq@sha256:52a0b64f4136020c5970ae96e178fba47da08c55d1d938292827ce2522f2448a
        imagePullPolicy: Always
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                # Wait for the RabbitMQ to be ready.
                until rabbitmqctl node_health_check; do
                  sleep 5
                done

                # By default, RabbitMQ does not have Highly Available policies enabled,
                # using the following command to enable it.
                rabbitmqctl set_policy ha-all "." '{"ha-mode":"all", "ha-sync-mode":"automatic"}' --apply-to all --priority 0
        livenessProbe:
          exec:
            command:
            - rabbitmqctl
            - status
          failureThreshold: 3
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        name: rabbitmq
        ports:
        - containerPort: 25672
          name: clitool
          protocol: TCP
        - containerPort: 5672
          name: client-access-2
          protocol: TCP
        - containerPort: 5671
          name: client-access-1
          protocol: TCP
        - containerPort: 4369
          name: epmd
          protocol: TCP
        - containerPort: 15672
          name: http
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - rabbitmqctl
            - status
          failureThreshold: 3
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        volumeMounts:
        - mountPath: /etc/rabbitmq
          name: config
        - mountPath: /var/lib/rabbitmq
          name: rabbitmq-1-rabbitmq-pvc
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - /bin/bash
        - -euc
        - |
          # Remove cached erlang cookie since we are always providing it,
          # that opens the way to recreate the application and access to existing data
          # as a new erlang will be regenerated again.
          rm -f /var/lib/rabbitmq/.erlang.cookie

          # Copy the mounted configuration to both places.
          cp /rabbitmqconfig/rabbitmq.conf /etc/rabbitmq/rabbitmq.conf
          cp /rabbitmqconfig/enabled_plugins /etc/rabbitmq/enabled_plugins
        image: gcr.io/cloud-marketplace/google/rabbitmq/debian9@sha256:741d18b41622814ae6eab29b0679dd45318437998213a5cb5532003846b435e1
        imagePullPolicy: Always
        name: copy-rabbitmq-config
        resources: {}
        volumeMounts:
        - mountPath: /rabbitmqconfig
          name: configmap
        - mountPath: /etc/rabbitmq
          name: config
        - mountPath: /var/lib/rabbitmq
          name: rabbitmq-1-rabbitmq-pvc
      restartPolicy: Always
      terminationGracePeriodSeconds: 180
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: rabbitmq.conf
            path: rabbitmq.conf
          - key: enabled_plugins
            path: enabled_plugins
          name: rabbitmq-1-rabbitmq-config
        name: configmap
      - emptyDir: {}
        name: config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      labels:
        app.kubernetes.io/component: rabbitmq-server
        app.kubernetes.io/name: rabbitmq-1
      name: rabbitmq-1-rabbitmq-pvc
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
      storageClassName: standard
